{
  "name": "Kidprint",
  "tagline": "",
  "body": "# Kidprint\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n### Overview\r\n\r\nOne of the challenges that doctors in developing countries face is\r\nidentification - namely, how to keep track of patients that they have treated\r\nand how to store their information. This becomes even more of a problem when\r\nthe patient does not understand or remember their medical information - when\r\nthey are infants, for example. This makes even the most basic treatments, such\r\nas vaccinations, very difficult - and a mistake is potentially fatal.\r\n\r\nProject Kidprint aims to solve that problem by going back to one of the \r\nearliest, but most reliable forms of identification - fingerprints. In\r\nconjunction with researchers and graduate students at the Qualcomm Institute at\r\nU.C. San Diego, our goal is to create a modular, intuitive, and cheap way of\r\nreliably reading the fingerprints of infants. While other attempts have been\r\nmade, the results have either been unsuccessful, or far too expensive and\r\ninaccessible. We hope to succeed where others have failed by taking a different\r\napproach to solving this problem - rather than take a specific technology and\r\nmold it to our needs, we are choosing to experiment with multiple technologies\r\nand picking the ones that are best suited to the task.\r\n\r\nThe core steps of the identification process are these:\r\n\r\n1. Use a camera to take an image of the fingerprint\r\n  * Automatically adjust the settings of the camera to have optimal clarity\r\n  * Prepare the image to be pipelined\r\n2. Pass the image to a processing device\r\n3. Run the image through an image processing algorithm\r\n4. Use the metadata from the algorithm to search through a database\r\n5. Allow the user to view and modify the information of the infant\r\n\r\n### Repository Information\r\nThis repository contains the code for the first step - interfacing with the\r\nembedded devices that are used for the project. These include, but are not\r\nlimited to, various cameras, an Arduino compatible microprocessor, and an\r\nArduino compatible Bluetooth module. The camera will be used to take the\r\npictures of the fingerprints, and the Arduino modules will be used to implement\r\nan autofocus algorithm, that we hope to later adapt to automatically change\r\nlight levels. We are rapidly cycling through prototypes, so the specific\r\ntechnologies are likely to change, but by using OpenCV and Arduino, both widely\r\naccepted standards, we guarantee that this code will be modular across a\r\nmultitude of devices.\r\n\r\n### Device Information\r\n**Current Camera:**\r\n[See3CAM_CU51](http://www.e-consystems.com/Monochrome-USB-Camera-board.asp)\r\n\r\n**Current Arduino board:**\r\n[SparkFun Pro Micro - 5V/16MHz](https://www.sparkfun.com/products/12640)\r\n\r\n**Current Arduino Bluetooth module:**\r\n[SparkFun Bluetooth Modem - BlueSMiRF Silver](https://www.sparkfun.com/products/12577)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}